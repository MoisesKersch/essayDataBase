package br.com.adaptaconsultoria.amr.springmvc.controller;

import static org.springframework.web.bind.annotation.RequestMethod.GET;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import br.com.adaptaconsultoria.amr.manager.RedeLinearManager;
import br.com.adaptaconsultoria.amr.model.Usuario;
import br.com.adaptaconsultoria.amr.persistence.DaoFactory;
import br.com.adaptaconsultoria.amr.springmvc.util.SessionUtil;

/**
 *
 * @author Will Zaniol
 * @author www.adaptaconsultoria.com.br
 * @version 1.0.0
 *
 */
@Controller
@Scope("session")
public class RedeLinearController {

	@RequestMapping(value = "/redelinear", method = GET)
	public String inicio(HttpSession session) {
		SessionUtil.setMenuAtivo(session, "redelinear");
		SessionUtil.setSubMenuAtivo(session, "redelinear");
		return "redelinear";
	}

	@RequestMapping(value = "/desenharedelinear", method = RequestMethod.GET)
	public @ResponseBody List<String> desenhaArvoreLinear(@RequestParam("id") String id, HttpSession session) throws Exception {
		List<String> lista = new ArrayList<String>();
		RedeLinearManager manager = new RedeLinearManager();

		if (id == null)
			id = SessionUtil.getUsuarioId(session);

		String adUserAnteriorId = null;
		if (id.startsWith("ANTERIOR")) {
			id = SessionUtil.getAttribute(session, "rede");
			if (!id.equals(SessionUtil.getUsuarioId(session)))
				adUserAnteriorId = DaoFactory.getInstance().getUsuarioDao().carregaIDDoUsuarioPatrocinador(id);
		}

		if (adUserAnteriorId != null)
			id = adUserAnteriorId;

		lista = manager.montaRedeLinearHTML5(id);
		SessionUtil.setAttribute(session, "rede", id);
		return lista;
	}

	@RequestMapping(value = "/buscaredelinear", method = RequestMethod.GET)
	public @ResponseBody List<String> buscaRedeLinear(@RequestParam("login") String login, HttpSession session) throws Exception {
		List<String> lista = new ArrayList<String>();
		RedeLinearManager manager = new RedeLinearManager();

		Usuario usuario = DaoFactory.getInstance().getUsuarioDao().carregaPorLogin(login);
		if (usuario != null) {
			Usuario logado = DaoFactory.getInstance().getUsuarioDao().carregaPorId(SessionUtil.getUsuarioId(session));
			boolean permite = DaoFactory.getInstance().getRedeLinearDao().descente(logado.getParceiroNegocios().getId(), usuario.getParceiroNegocios().getId());

			if (permite) {
				lista = manager.montaRedeLinearHTML5(usuario.getId());
				SessionUtil.setAttribute(session, "rede", usuario.getId());
			}
		}

		return lista;
	}

}