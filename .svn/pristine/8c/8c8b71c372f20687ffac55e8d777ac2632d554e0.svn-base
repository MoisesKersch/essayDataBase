package br.com.adaptaconsultoria.amr.manager;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.io.Serializable;

import br.com.adaptaconsultoria.amr.model.Documento;
import br.com.adaptaconsultoria.amr.persistence.DaoFactory;
import br.com.adaptaconsultoria.amr.properties.AMRProperties;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.Session;

/**
 *
 *
 * @author Will Zaniol
 * @author www.adaptaconsultoria.com.br
 * @version 1.0.0
 *
 */
public class DocumentoManager {

	public Documento downloadDocumento(Serializable id) throws Exception {

		Documento doc = DaoFactory.getInstance().getDocumentoDao().carregaPorId(id);
		if (doc == null)
			throw new Exception("Nenhum documento com o ID: " + id + " foi encontrado no banco de dados");

		doc.setUrl(copiaArquivo(new File(doc.getUrl())).getAbsolutePath());
		return doc;
	}

	private File copiaArquivo(File arquivo) throws Exception {
		String SFTPHOST = AMRProperties.getInstance().getPropriedade("ssh.host");
		int SFTPPORT = Integer.parseInt(AMRProperties.getInstance().getPropriedade("ssh.port"));
		String SFTPUSER = AMRProperties.getInstance().getPropriedade("ssh.user");
		// String SFTPPASS = Criptografia.decrypt(AMRProperties.getInstance().getPropriedade("ssh.password"));
		String SFTPPASS = AMRProperties.getInstance().getPropriedade("ssh.password");

		Session session = null;
		Channel channel = null;
		ChannelSftp channelSftp = null;

		JSch jsch = new JSch();
		session = jsch.getSession(SFTPUSER, SFTPHOST, SFTPPORT);
		session.setPassword(SFTPPASS);
		java.util.Properties config = new java.util.Properties();
		config.put("StrictHostKeyChecking", "no");
		session.setConfig(config);
		session.connect();

		channel = session.openChannel("sftp");
		channel.connect();
		channelSftp = (ChannelSftp) channel;
		channelSftp.cd(arquivo.getParent());
		byte[] buffer = new byte[1024];
		BufferedInputStream bis = new BufferedInputStream(channelSftp.get(arquivo.getName()));

		File newFile = new File(AMRProperties.getInstance().getPropriedade("diretorio.temp") + arquivo.getName());
		OutputStream os = new FileOutputStream(newFile);
		BufferedOutputStream bos = new BufferedOutputStream(os);
		int readCount;

		while ((readCount = bis.read(buffer)) > 0) {
			System.out.println("Writing: ");
			bos.write(buffer, 0, readCount);
		}
		bis.close();
		bos.close();

		return new File(AMRProperties.getInstance().getPropriedade("diretorio.temp") + arquivo.getName());
	}

}