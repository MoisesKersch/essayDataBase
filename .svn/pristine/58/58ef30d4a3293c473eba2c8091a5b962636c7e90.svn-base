package br.com.adaptaconsultoria.amr.springmvc.controller;

import static org.springframework.web.bind.annotation.RequestMethod.GET;
import static org.springframework.web.bind.annotation.RequestMethod.POST;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import br.com.adaptaconsultoria.amr.manager.FinanceiroManager;
import br.com.adaptaconsultoria.amr.model.Franqueado;
import br.com.adaptaconsultoria.amr.model.Transferencia;
import br.com.adaptaconsultoria.amr.model.Usuario;
import br.com.adaptaconsultoria.amr.persistence.DaoFactory;
import br.com.adaptaconsultoria.amr.springmvc.util.MessageUtil;
import br.com.adaptaconsultoria.amr.springmvc.util.SessionUtil;

/**
 *
 * @author Will Zaniol
 * @author www.adaptaconsultoria.com.br
 * @version 1.0.0
 *
 */
@Controller
@Scope("request")
public class FinanceiroController {

	@RequestMapping("exibemenusaque")
	public void exibeSaque(HttpServletResponse response, HttpSession session) throws Exception {
		Franqueado franqueado = DaoFactory.getInstance().getFranqueadoDao().carregaPorUsuario(SessionUtil.getUsuarioId(session));
		if (franqueado != null && franqueado.getLiberaSaque().equalsIgnoreCase("Y"))
			response.getWriter().write("true");
		else
			response.getWriter().write("");
		response.setStatus(200);
	}

	@RequestMapping(value = "/transferencia", method = GET)
	public ModelAndView trocaSenha(HttpSession session) {
		SessionUtil.setSubMenuAtivo(session, "transferencia");
		Transferencia transferencia = new Transferencia();
		ModelAndView model = new ModelAndView("transferencia", "transferencia", transferencia);
		return model;
	}

	@RequestMapping(value = "/transferencia", method = POST)
	public String saque(@Valid final Transferencia transferencia, BindingResult result, RedirectAttributes redirectAttributes, HttpSession session,
			HttpServletRequest request) {

		try {

			if (result.hasErrors()) {
				return "transferencia";
			}

			FinanceiroManager manager = new FinanceiroManager();
			String retorno = manager.transfere(SessionUtil.getUsuarioId(session), transferencia);

			MessageUtil.sucesso(redirectAttributes, "Sucesso!", retorno);

			return "redirect:transferencia";
		} catch (Exception e) {
			MessageUtil.erro(redirectAttributes, "ERRO", e);
			return "redirect:transferencia";
		}
	}

	@RequestMapping("validatransferenciacredito")
	public void validaPatrocinador(String login, HttpServletResponse response) throws Exception {
		Usuario usuario = DaoFactory.getInstance().getUsuarioDao().carregaPorLogin(login);
		if (usuario != null)
			response.getWriter().write(usuario.getParceiroNegocios().getNome());
		else
			response.getWriter().write("");
		response.setStatus(200);
	}

}