package br.com.adaptaconsultoria.amr.springmvc.controller;

import static org.springframework.web.bind.annotation.RequestMethod.GET;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import br.com.adaptaconsultoria.amr.manager.UsuarioManager;
import br.com.adaptaconsultoria.amr.model.Cadastro;
import br.com.adaptaconsultoria.amr.model.SaldoResumido;
import br.com.adaptaconsultoria.amr.model.Usuario;
import br.com.adaptaconsultoria.amr.persistence.DaoFactory;
import br.com.adaptaconsultoria.amr.springmvc.util.MessageUtil;
import br.com.adaptaconsultoria.amr.springmvc.util.SessionUtil;

/**
 *
 * @author Will Zaniol
 * @author www.adaptaconsultoria.com.br
 * @version 1.0.0
 *
 */
@Controller
@Scope("session")
public class MenuController {

	@RequestMapping(value = "/meusdados", method = GET)
	public ModelAndView goMeusDados(HttpSession session, RedirectAttributes redirectAttributes) {
		SessionUtil.setMenuAtivo(session, "meusdados");
		SessionUtil.setSubMenuAtivo(session, "meucadastro");

		UsuarioManager manager = new UsuarioManager();
		Cadastro cadastro = null;
		try {
			Usuario usuario = DaoFactory.getInstance().getUsuarioDao().carregaPorId(SessionUtil.getUsuarioId(session));
			cadastro = manager.criaCadastroDeParceiroDeNegocios(usuario.getParceiroNegocios().getId(), true, usuario.getId());
		} catch (Exception e) {
			cadastro = new Cadastro();
			MessageUtil.erro(redirectAttributes, "ERRO", e);
		}
		return new ModelAndView("meusdados", "cadastro", cadastro);
	}

	@RequestMapping(value = "/financeiro", method = GET)
	public ModelAndView goFinanceiro(HttpSession session, RedirectAttributes redirectAttributes) {
		SessionUtil.setMenuAtivo(session, "financeiro");
		SessionUtil.setSubMenuAtivo(session, "saldoresumido");
		List<SaldoResumido> lista = new ArrayList<SaldoResumido>();
		try {
			lista = DaoFactory.getInstance().getSaldoResumidoDao().carregaPorUsuario(SessionUtil.getUsuarioId(session));
		} catch (Exception e) {
			e.printStackTrace();
		}
		ModelAndView model = new ModelAndView("financeiro", "lista", lista);
		return model;
	}

	@RequestMapping(value = "/empreendedor", method = GET)
	public String goEmpreendedor(HttpSession session) {
		SessionUtil.setMenuAtivo(session, "empreendedor");
		SessionUtil.setSubMenuAtivo(session, "empreendedor");
		return "empreendedor";
	}

	@RequestMapping(value = "/salaconferencia", method = GET)
	public String goSalaconferencia(HttpSession session) {
		SessionUtil.setMenuAtivo(session, "salaconferencia");
		SessionUtil.setSubMenuAtivo(session, "salaconferencia");
		return "salaconferencia";
	}

	@RequestMapping(value = "/upgrade", method = GET)
	public String goUpgrade(HttpSession session) {
		SessionUtil.setMenuAtivo(session, "upgrade");
		SessionUtil.setSubMenuAtivo(session, "upgrade");
		return "upgrade";
	}

	@RequestMapping(value = "/minhascompras", method = GET)
	public String goMinhascompras(HttpSession session) {
		SessionUtil.setMenuAtivo(session, "minhascompras");
		SessionUtil.setSubMenuAtivo(session, "minhascompras");
		return "minhascompras";
	}

	@RequestMapping(value = "/minhasfaturas", method = GET)
	public String goMinhasfaturas(HttpSession session) {
		SessionUtil.setMenuAtivo(session, "minhasfaturas");
		SessionUtil.setSubMenuAtivo(session, "minhasfaturas");
		return "minhasfaturas";
	}

	@RequestMapping(value = "/suporte", method = GET)
	public String goSuporte(HttpSession session) {
		SessionUtil.setMenuAtivo(session, "suporte");
		SessionUtil.setSubMenuAtivo(session, "suporte");
		return "suporte";
	}

	@RequestMapping(value = "/redebinaria", method = GET)
	public String goRedeBinaria(HttpSession session) {
		SessionUtil.setMenuAtivo(session, "redebinaria");
		SessionUtil.setSubMenuAtivo(session, "arvorebinaria");
		return "redebinaria";
	}

}