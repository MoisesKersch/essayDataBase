package br.com.adaptaconsultoria.amr.springmvc.controller;

import static org.springframework.web.bind.annotation.RequestMethod.GET;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import br.com.adaptaconsultoria.amr.manager.RedeBinariaManager;
import br.com.adaptaconsultoria.amr.model.RedeBinaria;
import br.com.adaptaconsultoria.amr.model.Usuario;
import br.com.adaptaconsultoria.amr.persistence.DaoFactory;
import br.com.adaptaconsultoria.amr.springmvc.util.SessionUtil;

/**
 *
 * @author Will Zaniol
 * @author www.adaptaconsultoria.com.br
 * @version 1.0.0
 *
 */
@Controller
@Scope("session")
public class ArvoreBinariaController {

	@RequestMapping(value = "/arvorebinaria", method = GET)
	public String inicio(HttpSession session) {
		SessionUtil.setSubMenuAtivo(session, "arvorebinaria");
		return "arvorebinaria";
	}

	@RequestMapping(value = "desenhaarvorebinaria", method = RequestMethod.GET)
	public @ResponseBody List<RedeBinaria> desenhaArvoreBinaria(@RequestParam("id") String id, HttpSession session) throws Exception {

		RedeBinariaManager manager = new RedeBinariaManager();

		if (id == null)
			id = SessionUtil.getUsuarioId(session);

		return manager.montaRedeBinariaHTML5(id, SessionUtil.getUsuarioId(session));
	}

	@RequestMapping(value = "buscaarvorebinaria", method = RequestMethod.GET)
	public @ResponseBody List<RedeBinaria> buscaRedeLinear(@RequestParam("login") String login, HttpSession session) throws Exception {

		List<RedeBinaria> lista = new ArrayList<RedeBinaria>();

		Usuario usuario = DaoFactory.getInstance().getUsuarioDao().carregaPorLogin(login);
		if (usuario != null) {
			boolean permite = DaoFactory.getInstance().getRedeBinariaDao().descente(SessionUtil.getUsuarioId(session), usuario.getId());

			RedeBinariaManager manager = new RedeBinariaManager();
			if (permite)
				lista = manager.montaRedeBinariaHTML5(usuario.getId(), SessionUtil.getUsuarioId(session));
		}

		return lista;
	}

}